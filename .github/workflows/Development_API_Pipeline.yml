name: Development API CI/CD - Build, test and then run in azure

on: workflow_dispatch

jobs:
  CI: 
    runs-on: ubuntu-latest
    name: Build sln on ubuntu-latest and run unit tests
    steps:
      - name: Checkout
        uses: actions/checkout@development

      - name: Set up .Net 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Build sln
        run: dotnet build KNet/KNet.sln

      - name: Run Unit Tetsts
        run: dotnet test KNet/KNet.Tests/KNet.Tests.csproj
        
  DockerizeAndPushAPI:
    needs: [CI]
    runs-on: ubuntu-latest
    name: Create new docker image based on KNet.API
    steps:
    - name: Checkout Repo
      uses: actions/checkout@development
      
    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build -f KNet/KNet.API/Dockerfile . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/knet-api-development:${{ github.sha }} 
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/knet-api-development:${{ github.sha }}  
        
    - name: Login to Azure CLI 
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy and run API on AzureCI
      uses: azure/aci-deploy@v1
      with:
        name: knet-api-development
        publish-profile: ${{ secrets.SERVER_PUBLISH_PROFILE_DEV }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/knet-api-development:${{ github.sha }}
        resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
        dns-name-label: ${{ secrets.AZURE_RESOURCE_GROUP }}api-development-run${{ github.run_number }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        location: 'west us'    
